
id: mutiny-wallet
title: "Mutiny Wallet"
version: 0.5.9
release-notes: |
  - Updated LDK & BDK (will resync on chain funds, give it a minute or two)
  - Faster startup time
  - Language switcher in settings
license: MIT
wrapper-repo: "https://github.com/benthecarman/mutiny-startos"
upstream-repo: "https://github.com/MutinyWallet/mutiny-web"
support-site: "https://matrix.to/#/#mutiny-community:lightninghackers.com/"
marketing-site: "https://mutinywallet.com/"
build: ["make"]
description:
  short: Mutiny is a self-custodial lightning wallet that runs in the web.
  long: |
    Mutiny is a self-custodial lightning wallet that runs in the web. It is a not a traditional lightning node that is always online, but rather a wallet that runs in your browser of the device of you're accessing it from. Mutiny comes with full functionality for sending and receiving on-chain and lightning payments. It also supports many social features like Nostr integrations like Nostr Wallet Connect, Nostr Contacts, and a Zap Feed. WARNING: This is an beta software, don't put too much money in.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: "/var/lib/postgresql"
health-checks:
  main:
    name: Web UI
    success-message: Mutiny is ready to visit in a web browser
    type: docker
    image: main
    entrypoint: check-web.sh
    args: []
    io-format: json
    inject: true
config: ~
properties: ~
volumes:
  main:
    type: data
interfaces:
  main:
    name: User Interface
    description: The UI for Mutiny Wallet
    tor-config:
      port-mapping:
        80: "80"
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http
dependencies: {}
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /var/lib/postgresql
    mounts:
      BACKUP: "/mnt/backup"
      main: "/var/lib/postgresql"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /var/lib/postgresql
    mounts:
      BACKUP: "/mnt/backup"
      main: "/var/lib/postgresql"
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
